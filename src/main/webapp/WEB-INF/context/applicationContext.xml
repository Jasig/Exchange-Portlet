<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

    <!--  enable access to externalized properties via PropertyPlaceholderConfigurer -->
    <!-- bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="WEB-INF/ecs.properties"/>
    </bean-->

    <!-- Service Classes that might need access to PropertyPlaceHolderConfigurer -->
    <!-- The one and only InboxMessageService 
         TODO: think about abstracting out the ecs.properties using
         PropertyPlaceHolderConfigurer see example in petportal, could read
         properties and then inject them instead of doing it InboxMessageServiceImpl class -->
    <bean id="inboxMessageService" class="ca.uvic.portal.ecsPortlet.service.InboxMessageServiceImpl">
        <constructor-arg  value="/ecs.properties" />
        <constructor-arg value="10" />
        <constructor-arg value="/ecs_inbox_msgs-rules.xml" />
        <constructor-arg value="/ecs_alternate_id-rules.xml" />
        <!-- constructor-arg value="EwsLegacyId" /-->
        <constructor-arg value="EwsId" />
        <constructor-arg value="OwaId" />
    </bean>

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>

    <!-- Default View Resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="cache" value="false"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Abstract Default Exception Handler Bean -->
    <bean id="defaultExceptionHandlerTemplate" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver" abstract="true">
        <property name="defaultErrorView" value="defError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
                <prop key="javax.portlet.UnavailableException">notAvailable</prop>
            </props>
        </property>
    </bean>

</beans>
