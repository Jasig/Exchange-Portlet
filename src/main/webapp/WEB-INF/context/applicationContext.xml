<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

    <!--  enable access to externalized properties via PropertyPlaceholderConfigurer -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:ecs.properties"/>
    </bean>


    <!-- Service Classes that might need access to PropertyPlaceHolderConfigurer -->
    <!-- The one and only InboxMessageServiceImpl Constructor signature
        messageLimit              = msgLimit;
        messageRulesFile          = msgRulesFile;
        alternateIdRulesFile      = altIdRulesFile;
        alternateIdFromIdType     = fromIdType;
        alternateIdToIdType       = toIdType;
        exchangeDomain            = exchDomain;
        exchangeUrl               = exchUrl;
        exchangeMailboxDomain     = exchMboxDomain;-->
    <bean id="inboxMessageService" class="ca.uvic.portal.ecsPortlet.service.InboxMessageServiceImpl">
        <constructor-arg value="10" />
        <constructor-arg value="/ecs_inbox_msgs-rules.xml" />
        <constructor-arg value="/ecs_alternate_id-rules.xml" />
        <!-- constructor-arg value="EwsLegacyId" /-->
        <constructor-arg value="EwsId" />
        <constructor-arg value="OwaId" />
        <constructor-arg value="${ecs.domain}" />
        <constructor-arg value="${ecsurl}" />
        <constructor-arg value="@${ecs.mailbox.domain}" />
    </bean>
    <!-- The one and only CalendarItemServiceImpl Constructor signature
        eventLimit                = evtLimit;
        calItemRulesFile          = calRulesFile;
        alternateIdRulesFile      = altIdRulesFile;
        alternateIdFromIdType     = fromIdType;
        alternateIdToIdType       = toIdType;
        exchangeDomain            = exchDomain;
        exchangeUrl               = exchUrl;
        exchangeMailboxDomain     = exchMboxDomain; -->
    <bean id="calendarItemService" class="ca.uvic.portal.ecsPortlet.service.CalendarItemServiceImpl">
        <constructor-arg value="10" />
        <constructor-arg value="/ecs_calendar_item-rules.xml" />
        <constructor-arg value="/ecs_alternate_id-rules.xml" />
        <!--constructor-arg value="EwsLegacyId" /-->
        <constructor-arg value="EwsId" />
        <constructor-arg value="OwaId" />
        <constructor-arg value="${ecs.domain}" />
        <constructor-arg value="${ecsurl}" />
        <constructor-arg value="@${ecs.mailbox.domain}" />
    </bean>
    <!--  The one and only CalendarListServiceImpl Constructor signature
        calendarParentFolderId    = calParentFolderId;
        calendarListRulesFile     = calListRulesFile;
        alternateIdRulesFile      = altIdRulesFile;
        alternateIdFromIdType     = fromIdType;
        alternateIdToIdType       = toIdType;
        exchangeDomain            = exchDomain;
        exchangeUrl               = exchUrl;
        exchangeMailboxDomain     = exchMboxDomain; -->
    <bean id="calendarListService" class="ca.uvic.portal.ecsPortlet.service.CalendarListServiceImpl">
        <!-- The calendar parent folder should be the same across every
             exchange install, but the parameter adjustable just in case -->
        <constructor-arg value="calendar" />
        <constructor-arg value="/ecs_calendar_list-rules.xml" />
        <constructor-arg value="/ecs_alternate_id-rules.xml" />
        <!--constructor-arg value="EwsLegacyId" /-->
        <constructor-arg value="EwsId" />
        <constructor-arg value="OwaId" />
        <constructor-arg value="${ecs.domain}" />
        <constructor-arg value="${ecsurl}" />
        <constructor-arg value="@${ecs.mailbox.domain}" />
    </bean>
    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>

    <!-- Default View Resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="cache" value="${viewResCache}"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Abstract Default Exception Handler Bean -->
    <!-- bean id="defaultExceptionHandlerTemplate" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver" abstract="true"-->
    <bean class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver">
        <!-- property name="defaultErrorView" value="defError"/-->
        <property name="exceptionMappings">
            <props>
                <prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
                <prop key="javax.portlet.UnavailableException">notAvailable</prop>
                <prop key="java.lang.Exception">defError</prop>
            </props>
        </property>
    </bean>

</beans>
